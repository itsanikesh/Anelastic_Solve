<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Addon Tecplot GUI Builder</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=809>
<meta name=layout-width content=844>


<!--(Links)=========================================================-->

 <link rel='stylesheet' href='default_ns.css'>
<script type="text/javascript" language="JavaScript" title="WebHelpSplitCss">
<!--
if (navigator.appName !="Netscape")
{   document.write("<link rel='stylesheet' href='default.css'>");}
//-->
</script>
<style type="text/css">
<!--
ul.whs1 {list-style: disc;}
p.whs2 {font-size: 10pt;}
p.whs3 {font-size: 12pt; font-weight: bold;}
-->
</style>
<script type="text/javascript" language="JavaScript" title="WebHelpInlineScript">
<!--
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//-->
</script>
<style type="text/css">
<!--
  div.WebHelpPopupMenu {position:absolute; left:0px; top:0px; z-index:4; visibility:hidden;}
-->
</style>
<script type="text/javascript" language="javascript1.2" src="whmsg.js"></script>
<script type="text/javascript" language="javascript" src="whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="whtopic.js"></script>
</head>

<!--(Body)==========================================================-->


<body>

<script type="text/javascript" language="javascript1.2">
<!--
if (window.gbWhTopic)
{
	if (window.addTocInfo)
	{
	addTocInfo("Tecplot 10 Help\nAdd-Ons\nAddon Tecplot GUI Builder");
addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);

	if (window.setRelStartPage)
	{
	setRelStartPage("tecplot10.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();
//-->
</script>
<h1>Addon Tecplot GUI Builder</h1>

<p>Tecplot GUI Builder is used to generate graphical user interfaces for 
 Tecplot add-ons. You will commonly start with the file, gui.lay, which 
 was created by default if you used the Add-on Wizard or CreateNewAddOn 
 shell scripts to create your add-on. To build an interface, open this 
 layout file in Tecplot and add an assortment of controls to modal or modeless 
 dialogs.</p>

<p>&nbsp;</p>

<p>The available options are:</p>

<ul type="disc" class="whs1">
	
	<li class=kadov-p><p class="whs2"><span style="font-style: italic;"><I>Language:</I></span> 
 Once you have laid out your dialog, TGB writes code to make it run. Choose 
 between C and FORTRAN.</p></li>
</ul>

<p class="whs2">&nbsp;</p>

<p class="whs3">Dialogs</p>

<ul type="disc" class="whs1">
	
	<li class=kadov-p><p class="whs2"><span style="font-style: italic;"><I>Modeless 
 Dialog:</I></span> Click to create a blank modeless dialog. A modeless dialog 
 only has the Close and Help buttons at the bottom, and will allow the 
 user to interact with other parts of the Tecplot interface while it is 
 up.</p></li>
	
	<li class=kadov-p><p class="whs2"><span style="font-style: italic;"><I>Modal 
 Dialog:</I></span> Click to create a blank modal dialog. A modal dialog has 
 OK, Cancel, and Help buttons at the bottom, and will not let the user 
 interact with other dialogs while it is up.</p></li>
</ul>

<p class="whs2">&nbsp;</p>

<p class="whs3">Controls</p>

<ul type="disc" class="whs1">
	
	<li class=kadov-p><p class="whs2"><span style="font-style: italic;"><I>Label:</I></span> 
 Add a label (that is, text) to your dialog.</p></li>
	
	<li class=kadov-p><p class="whs2"><span style="font-style: italic;"><I>Push 
 Button:</I></span> Add a push button to your dialog. Push buttons perform 
 some action when clicked. A callback function will be created for this 
 button when you click Go Build.</p></li>
	
	<li class=kadov-p><p class="whs2"><span style="font-style: italic;"><I>Text 
 Field:</I></span> Add a hollow box to your dialog. Text fields are usually 
 used as a means of entering information. A callback function will be created 
 for this text field when you click Go Build. The callback will be called 
 when the user has completed entering text, which usually is activated 
 by moving the pointer focus to another control.</p></li>
	
	<li class=kadov-p><p class="whs2"><span style="font-style: italic;"><I>Multi-Line 
 Text Field:</I></span> Add a scrolled multi-line text field to your dialog. 
 A callback function will be created for this multi-line text field when 
 you click Go Build. The callback will be called when the user has completed 
 entering text, which usually is activated by moving the pointer focus 
 to another control.</p></li>
	
	<li class=kadov-p><p class="whs2"><span style="font-style: italic;"><I>Read-Only 
 Multi-Line Text Field:</I></span> Add a scrolled read-only multi-line text 
 field to your dialog. No callback function is created because the user 
 cannot enter text into this control. This is mainly used to display information 
 back to the user.</p></li>
	
	<li class=kadov-p><p class="whs2"><span style="font-style: italic;"><I>Option 
 Menu:</I></span> Add an option menu to your dialog. An option menu gives the 
 user a finite list of items to select from; the user clicks on one option 
 to select it. A callback function will be created for this button when 
 you click Go Build. The callback will be generated when the user makes 
 a selection, and the integer value representing the selected item will 
 be sent to your add-on.</p></li>
	
	<li class=kadov-p><p class="whs2"><span style="font-style: italic;"><I>Toggle:</I></span> 
 Add a single toggle to your dialog. A toggle is used to give the user 
 a choice to turn something on or off. A callback function will be created 
 for this button. The callback will be generated when the user changes 
 the state of the toggle.</p></li>
	
	<li class=kadov-p><p class="whs2"><span style="font-style: italic;"><I>Option 
 Buttons:</I></span> Add a three-way option button to your dialog. A set of 
 option buttons lets the user select one of a mutually exclusive set of 
 options. You can specify from two to five buttons by editing after this 
 control has been added. Just add or remove lines beginning with~7.</p></li>
	
	<li class=kadov-p><p class="whs2"><span style="font-style: italic;"><I>Scale:</I></span> 
 Add a scale (also known as a slider) to your dialog. A scale lets you 
 set a value within a range specified by the scale. By default, the scale 
 ranges from zero to 100. You can later change the limits by editing the 
 callback code.</p></li>
	
	<li class=kadov-p><p class="whs2"><span style="font-style: italic;"><I>Multi-Selection 
 List:</I></span> Add a scrolled list to your dialog, from which a user may 
 select one or more items. You may add to and remove from this list under 
 program control. A callback function is created and will be called with 
 an integer array defining the list of items selected by the user.</p></li>
	
	<li class=kadov-p><p class="whs2"><span style="font-style: italic;"><I>Single-Selection 
 List:</I></span> Add a scrolled list to your dialog, from which a user may 
 select one item. You may add to and remove from this list under program 
 control. A callback function is created and will be called with an integer 
 identifying the item selected by the user.</p></li>
	
	<li class=kadov-p><p class="whs2"><span style="font-style: italic;"><I>Go 
 Build:</I></span> Click to generate header files and source code stub files 
 for your GUI. The stub files contain instructions that guide you through 
 the process of coding each control on your interface to make it functional.</p></li>
</ul>

<p>&nbsp;</p>

<script type="text/javascript" language="javascript1.2">
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);
//-->
</script>
</body>

</html>
